---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Install Python sampleprojectpy2 libraries
  pip:
    name: sampleprojectpy2[test]>=1.3.1

- name: Ensure sampleprojectpy2 is installed
  python_requirements_info:
    dependencies: sampleprojectpy2[test]>=1.3.1
  register: _py_facts
  failed_when: | 
      (_py_facts.msg is defined) and (_py_facts.msg | regex_search("Failed to parse")) or
      (_py_facts.valid is not defined) or
      ('sampleprojectpy2[test]' not in _py_facts.valid)

- name: Ensure sampleprojectpy2 library is installed - with spaces
  python_requirements_info:
    dependencies: sampleprojectpy2[test] >= 1.3.1
  register: _py_facts
  failed_when: | 
      ( _py_facts.msg is defined) and ( _py_facts.msg | regex_search("Failed to parse")) or
      ( _py_facts.valid is not defined) or
      ( 'sampleprojectpy2[test]' not in _py_facts.valid)

- name: Ensure sampleprojectpy2 library extra is installed
  python_requirements_info:
    dependencies: coverage
  register: _py_facts
  failed_when: | 
      ( _py_facts.msg is defined) and ( _py_facts.msg | regex_search("Failed to parse")) or
      ( _py_facts.valid is not defined) or
      ( 'coverage' not in _py_facts.valid)
  
- name: Ensure sampleprojectpy2[test syntax is invalid
  python_requirements_info:
    dependencies: sampleprojectpy2[test
  register: wrong_spec
  ignore_errors: true

- assert:
    that:
      - wrong_spec is failed
      - wrong_spec.msg is defined
      - "'Must be formatted like' in wrong_spec.msg"

- name: Ensure sampleprojectpy2test] syntax is invalid
  python_requirements_info:
    dependencies: sampleprojectpy2test]
  register: wrong_spec
  ignore_errors: true

- assert:
    that:
      - wrong_spec is failed
      - wrong_spec.msg is defined
      - "'Must be formatted like' in wrong_spec.msg"